
package introsde.assignment.soap.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "People", targetNamespace = "http://ws.soap.assignment.introsde/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface People {


    /**
     * 
     * @param personId
     * @return
     *     returns introsde.assignment.soap.ws.Person
     */
    @WebMethod
    @WebResult(name = "person", targetNamespace = "http://ws.soap.assignment.introsde/")
    @RequestWrapper(localName = "readPerson", targetNamespace = "http://ws.soap.assignment.introsde/", className = "introsde.assignment.soap.ws.ReadPerson")
    @ResponseWrapper(localName = "readPersonResponse", targetNamespace = "http://ws.soap.assignment.introsde/", className = "introsde.assignment.soap.ws.ReadPersonResponse")
    @Action(input = "http://ws.soap.assignment.introsde/People/readPersonRequest", output = "http://ws.soap.assignment.introsde/People/readPersonResponse")
    public Person readPerson(
        @WebParam(name = "personId", targetNamespace = "")
        int personId);

    /**
     * 
     * @param person
     */
    @WebMethod
    @RequestWrapper(localName = "updatePerson", targetNamespace = "http://ws.soap.assignment.introsde/", className = "introsde.assignment.soap.ws.UpdatePerson")
    @ResponseWrapper(localName = "updatePersonResponse", targetNamespace = "http://ws.soap.assignment.introsde/", className = "introsde.assignment.soap.ws.UpdatePersonResponse")
    @Action(input = "http://ws.soap.assignment.introsde/People/updatePersonRequest", output = "http://ws.soap.assignment.introsde/People/updatePersonResponse")
    public void updatePerson(
        @WebParam(name = "person", targetNamespace = "http://ws.soap.assignment.introsde/", mode = WebParam.Mode.INOUT)
        Holder<Person> person);

    /**
     * 
     * @return
     *     returns java.util.List<introsde.assignment.soap.ws.LifeStatus>
     */
    @WebMethod
    @WebResult(name = "lifeStatus", targetNamespace = "")
    @RequestWrapper(localName = "readAllLifeStatus", targetNamespace = "http://ws.soap.assignment.introsde/", className = "introsde.assignment.soap.ws.ReadAllLifeStatus")
    @ResponseWrapper(localName = "readAllLifeStatusResponse", targetNamespace = "http://ws.soap.assignment.introsde/", className = "introsde.assignment.soap.ws.ReadAllLifeStatusResponse")
    @Action(input = "http://ws.soap.assignment.introsde/People/readAllLifeStatusRequest", output = "http://ws.soap.assignment.introsde/People/readAllLifeStatusResponse")
    public List<LifeStatus> readAllLifeStatus();

    /**
     * 
     * @param goalId
     * @return
     *     returns introsde.assignment.soap.ws.Goals
     */
    @WebMethod
    @WebResult(name = "goal", targetNamespace = "")
    @RequestWrapper(localName = "readGoal", targetNamespace = "http://ws.soap.assignment.introsde/", className = "introsde.assignment.soap.ws.ReadGoal")
    @ResponseWrapper(localName = "readGoalResponse", targetNamespace = "http://ws.soap.assignment.introsde/", className = "introsde.assignment.soap.ws.ReadGoalResponse")
    @Action(input = "http://ws.soap.assignment.introsde/People/readGoalRequest", output = "http://ws.soap.assignment.introsde/People/readGoalResponse")
    public Goals readGoal(
        @WebParam(name = "goalId", targetNamespace = "")
        int goalId);

    /**
     * 
     * @param lifeStatus
     */
    @WebMethod
    @RequestWrapper(localName = "updateLifeStatus", targetNamespace = "http://ws.soap.assignment.introsde/", className = "introsde.assignment.soap.ws.UpdateLifeStatus")
    @ResponseWrapper(localName = "updateLifeStatusResponse", targetNamespace = "http://ws.soap.assignment.introsde/", className = "introsde.assignment.soap.ws.UpdateLifeStatusResponse")
    @Action(input = "http://ws.soap.assignment.introsde/People/updateLifeStatusRequest", output = "http://ws.soap.assignment.introsde/People/updateLifeStatusResponse")
    public void updateLifeStatus(
        @WebParam(name = "lifeStatus", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<LifeStatus> lifeStatus);

    /**
     * 
     * @param goal
     */
    @WebMethod
    @RequestWrapper(localName = "updateGoal", targetNamespace = "http://ws.soap.assignment.introsde/", className = "introsde.assignment.soap.ws.UpdateGoal")
    @ResponseWrapper(localName = "updateGoalResponse", targetNamespace = "http://ws.soap.assignment.introsde/", className = "introsde.assignment.soap.ws.UpdateGoalResponse")
    @Action(input = "http://ws.soap.assignment.introsde/People/updateGoalRequest", output = "http://ws.soap.assignment.introsde/People/updateGoalResponse")
    public void updateGoal(
        @WebParam(name = "goal", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Goals> goal);

    /**
     * 
     * @return
     *     returns java.util.List<introsde.assignment.soap.ws.Goals>
     */
    @WebMethod
    @WebResult(name = "goal", targetNamespace = "")
    @RequestWrapper(localName = "readAllGoals", targetNamespace = "http://ws.soap.assignment.introsde/", className = "introsde.assignment.soap.ws.ReadAllGoals")
    @ResponseWrapper(localName = "readAllGoalsResponse", targetNamespace = "http://ws.soap.assignment.introsde/", className = "introsde.assignment.soap.ws.ReadAllGoalsResponse")
    @Action(input = "http://ws.soap.assignment.introsde/People/readAllGoalsRequest", output = "http://ws.soap.assignment.introsde/People/readAllGoalsResponse")
    public List<Goals> readAllGoals();

    /**
     * 
     * @param lsId
     * @return
     *     returns introsde.assignment.soap.ws.LifeStatus
     */
    @WebMethod
    @WebResult(name = "lifeStatus", targetNamespace = "")
    @RequestWrapper(localName = "readLifeStatus", targetNamespace = "http://ws.soap.assignment.introsde/", className = "introsde.assignment.soap.ws.ReadLifeStatus")
    @ResponseWrapper(localName = "readLifeStatusResponse", targetNamespace = "http://ws.soap.assignment.introsde/", className = "introsde.assignment.soap.ws.ReadLifeStatusResponse")
    @Action(input = "http://ws.soap.assignment.introsde/People/readLifeStatusRequest", output = "http://ws.soap.assignment.introsde/People/readLifeStatusResponse")
    public LifeStatus readLifeStatus(
        @WebParam(name = "lsId", targetNamespace = "")
        int lsId);

}
